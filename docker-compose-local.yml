version: '3'

services:
  mongo-primary:
    container_name: nestjs-monorepo-primary
    image: mongo:4.2.20
    entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'app']
    env_file:
      - .env
    volumes:
      - mongo-primary-data:/data/db
      - ./scripts/rs-init.sh:/scripts/rs-init.sh
    ports:
      - 27001:27017
    networks:
      mongo-network:
        ipv4_address: 20.0.0.2
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2048M

  mongo-secondary:
    container_name: nestjs-monorepo-secondary
    image: mongo:4.2.20
    entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'app']
    env_file:
      - .env
    volumes:
      - mongo-secondary-data:/data/db
    ports:
      - 27002:27017
    networks:
      mongo-network:
        ipv4_address: 20.0.0.3
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2048M

  mongo-tertiary:
    container_name: nestjs-monorepo-tertiary
    image: mongo:4.2.20
    entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'app']
    env_file:
      - .env
    volumes:
      - mongo-tertiary-data:/data/db
    ports:
      - 27003:27017
    networks:
      mongo-network:
        ipv4_address: 20.0.0.4
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2048M
  redis:
    container_name: monorepo-redis
    image: 'redis:alpine'
    volumes:
      - redis-data:/data
    ports:
      - 6379:6379
  redis-commander:
    container_name: monorepo-redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    depends_on:
      - redis
    env_file:
      - .env
    ports:
      - '8081:8081'
  elasticsearch:
    container_name: monorepo_elasticsearch
    image: elasticsearch:7.11.2
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
  kibana:
    container_name: monorepo-kibana
    image: kibana:7.11.2
    ports:
      - '5601:5601'
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
  jaegertracing:
    container_name: monorepo_jaegertracing
    image: jaegertracing/all-in-one:latest
    env_file:
      - .env
    ports:
      - '5775:5775/udp'
      - '6831:6831/udp'
      - '6832:6832/udp'
      - '5778:5778'
      - '16686:16686'
      - '14268:14268'
      - '9411:9411'
networks:
  mongo-network:
    driver: bridge
    ipam:
      config:
        - subnet: 20.0.0.0/29

volumes:
  mongo-primary-data:
  mongo-secondary-data:
  mongo-tertiary-data:
  redis-data: